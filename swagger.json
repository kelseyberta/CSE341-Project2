{
  "swagger": "2.0",
  "info": {
    "title": "Recipes API",
    "description": "Get recipes and users",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/login": {
      "get": {
        "description": "login",
        "tags":
          ["login,out,api-docs"],
        "parameters": [],
        "responses": {}
      }
    },
    "/logout": {
      "get": {
        "description": "logout",
        "tags":
          ["login,out,api-docs"],
        "parameters": [],
        "responses": {}
      }
    },
    "/api-docs": {
      "get": {
        "description": "Get to swagger",
        "tags":
          ["login,out,api-docs"],
        "parameters": [],
        "responses": {}
      }
    },
    "/recipes/": {
      "get": {
        "description": "Get all recipes",
        "tags":
          ["recipes"],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "description": "add recipe to database",
        "tags":
          ["recipes"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "recipeName": {
                  "example": "any"
                },
                "cuisineType": {
                  "example": "any"
                },
                "cookTime": {
                  "example": "any"
                },
                "cookTemp": {
                  "example": "any"
                },
                "ingredients": {
                  "example": "any"
                },
                "directions": {
                  "example": "any"
                },
                "servings": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created recipe"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/recipes/{recipeName}": {
      "get": {
        "description": "Get recipe by name",
        "tags":
          ["recipes"],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "recipeName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "update recipe with access",
        "tags":
          ["recipes"],
        "parameters": [
          {
            "name": "recipeName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "recipeName": {
                  "example": "any"
                },
                "cuisineType": {
                  "example": "any"
                },
                "cookTime": {
                  "example": "any"
                },
                "cookTemp": {
                  "example": "any"
                },
                "ingredients": {
                  "example": "any"
                },
                "directions": {
                  "example": "any"
                },
                "servings": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "Delete recipe with authorization",
        "tags":
          ["recipes"],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "recipeName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/": {
      "get": {
        "description": "Get all users in db",
        "tags":
          ["users"],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "description": "Add user to database",
        "tags":
          ["users"],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "example": "any"
                },
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created User"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{username}": {
      "get": {
        "description": "Get user by username",
        "tags":
          ["users"],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "Update user",
        "tags":
          ["users"],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "Delete user with authorization",
        "tags":
          ["users"],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}